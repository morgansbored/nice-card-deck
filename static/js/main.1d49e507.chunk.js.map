{"version":3,"sources":["Suits.js","Card.js","CardDeck.js","App.js","reportWebVitals.js","index.js"],"names":["Suits","Object","freeze","hearts","diamonds","clubs","spades","Card","this","props","number","suit","join","className","getCardClasses","Component","CardDeck","cardList","keys","map","i","str","toString","key","push","getCards","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAaA,EAAQC,OAAOC,OAAO,CAC/BC,OAAQ,SACRC,SAAU,WACVC,MAAO,QACPC,OAAQ,W,eCCSC,E,oKACjB,WACI,MAAyBC,KAAKC,MAAtBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,KAMhB,MALsB,CAClB,OADkB,UAEfA,EAFe,YAEPD,IAGME,KAAK,O,oBAE9B,WACI,OACI,qBACCC,UAAWL,KAAKM,uB,GAbKC,aCAbC,E,8JACjB,WACI,IAAIC,EAAW,GASf,OARAhB,OAAOiB,KAAKlB,GAAOmB,KAAI,SAACR,GACpB,IAAK,IAAIS,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMC,EAAMD,EAAEE,WACRC,EAAG,UAAMZ,EAAN,YAAcU,GACvBJ,EAASO,KAAK,cAAC,EAAD,CAAMd,OAAQW,EAAKV,KAAMA,GAAWY,IAEtD,OAAO,KAEJN,I,oBAEX,WACI,OACI,qBAAKJ,UAAU,gBAAf,SACKL,KAAKiB,iB,GAhBgBV,aCDzBW,G,MAAM,WACjB,OACI,cAAC,IAAMC,SAAP,UACM,qBAAKd,UAAU,MAAf,SACJ,cAAC,EAAD,UCIOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d49e507.chunk.js","sourcesContent":["export const Suits = Object.freeze({\n    hearts: \"hearts\",\n    diamonds: \"diamonds\",\n    clubs: \"clubs\",\n    spades: \"spades\"\n  });","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {Suits} from \"./Suits\";\nimport './_cards.scss';\n\nexport default class Card extends Component {\n    getCardClasses() {\n        const { number, suit } = this.props;\n        const buttonClasses = [\n            \"card\",\n            `${suit}-${number}`\n        ];\n\n        return buttonClasses.join(\" \");\n    }\n    render() {\n        return (\n            <div\n             className={this.getCardClasses()}\n            >\n            </div>\n        );\n    }\n}\nCard.propTypes = {\n    number: PropTypes.string.isRequired,\n    suit: PropTypes.oneOf(Object.keys(Suits))\n};","import React, { Component } from 'react';\nimport Card from './Card';\nimport {Suits} from \"./Suits\";\n\n\nexport default class CardDeck extends Component {\n    getCards() {\n        let cardList = [];\n        Object.keys(Suits).map((suit)=>{\n            for (let i = 1; i < 14; i++) {\n                const str = i.toString();\n                const key = `${suit}-${str}`;\n                cardList.push(<Card number={str} suit={suit} key={key} />); \n            }\n            return true;\n        })\n        return cardList;    \n    }\n    render() {\n        return (\n            <div className=\"cards-wrapper\">\n                {this.getCards()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport CardDeck from './CardDeck';\nimport './App.scss';\n\nexport const App = () => {\n  return(\n      <React.Fragment>\n            <div className=\"App\">\n        <CardDeck />\n</div>\n      </React.Fragment>\n    );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}